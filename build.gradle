plugins {
    id 'java'
    id 'application'
//	id 'org.openjfx.javafxplugin' version '0.0.5'
//	id "com.google.osdetector" version "1.4.0"
}

group 'de.thro.inf.prg3'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8

/*
Required only if JavaFX graphics extension is required
def platformMap = [
        osx    : 'mac',
        windows: 'win',
        linux  : 'linux'
]

ext.platform = platformMap[osdetector.os] */

// Define the main class for the application
mainClassName = 'de.thro.inf.prg3.a08.App'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation("org.apache.commons:commons-lang3:$commons_lang3_version")
    implementation("org.apache.logging.log4j:log4j-api:${log4j2Version}")
    implementation("org.apache.logging.log4j:log4j-core:${log4j2Version}")

    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"
    implementation "com.squareup.retrofit2:retrofit:${retrofit2_version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2_version}"

    //implementation "org.openjfx:javafx-graphics:11.0.1:$platform"

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

/*
javafx {
	modules = [ 'javafx.controls', 'javafx.fxml' ]
}
*/
